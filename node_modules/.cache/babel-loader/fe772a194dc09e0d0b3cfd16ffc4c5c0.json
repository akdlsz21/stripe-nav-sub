{"ast":null,"code":"var _jsxFileName = \"/home/jihoon/magic/projects/react-projects/13-stripe-submenus/setup/src/context.js\";\nimport React, { useState, useContext } from 'react';\nimport sublinks from './data';\nconst AppContext = React.createContext();\nexport function AppProvider({\n  children\n}) {\n  const [isSidebarOpen, setIsSidebarOpen] = useState(false);\n  const [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n  const [location, setLocation] = useState({});\n\n  function openSidebar() {\n    setIsSidebarOpen(true);\n  }\n\n  function closeSidebar() {\n    setIsSidebarOpen(false);\n  }\n\n  function openSubmenu(text, coordinates) {\n    setLocation(coordinates);\n    setIsSubmenuOpen(true);\n  }\n\n  function closeSubmenu() {\n    setIsSubmenuOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(AppContext.Provider, {\n    value: {\n      isSubmenuOpen,\n      isSidebarOpen,\n      openSubmenu,\n      openSidebar,\n      closeSubmenu,\n      closeSidebar,\n      location\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, children);\n}\nexport function useGlobalContext() {\n  return useContext(AppContext);\n}","map":{"version":3,"sources":["/home/jihoon/magic/projects/react-projects/13-stripe-submenus/setup/src/context.js"],"names":["React","useState","useContext","sublinks","AppContext","createContext","AppProvider","children","isSidebarOpen","setIsSidebarOpen","isSubmenuOpen","setIsSubmenuOpen","location","setLocation","openSidebar","closeSidebar","openSubmenu","text","coordinates","closeSubmenu","useGlobalContext"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,QAAP,MAAqB,QAArB;AAEA,MAAMC,UAAU,GAAGJ,KAAK,CAACK,aAAN,EAAnB;AAEA,OAAO,SAASC,WAAT,CAAqB;AAAEC,EAAAA;AAAF,CAArB,EAAmC;AACzC,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACS,aAAD,EAAgBC,gBAAhB,IAAoCV,QAAQ,CAAC,KAAD,CAAlD;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,WAASa,WAAT,GAAuB;AACtBL,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AACD,WAASM,YAAT,GAAwB;AACvBN,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;;AACD,WAASO,WAAT,CAAqBC,IAArB,EAA2BC,WAA3B,EAAwC;AACvCL,IAAAA,WAAW,CAACK,WAAD,CAAX;AAEAP,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACA;;AACD,WAASQ,YAAT,GAAwB;AACvBR,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA;;AAED,sBACC,oBAAC,UAAD,CAAY,QAAZ;AACC,IAAA,KAAK,EAAE;AACND,MAAAA,aADM;AAENF,MAAAA,aAFM;AAGNQ,MAAAA,WAHM;AAINF,MAAAA,WAJM;AAKNK,MAAAA,YALM;AAMNJ,MAAAA,YANM;AAONH,MAAAA;AAPM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWEL,QAXF,CADD;AAeA;AAED,OAAO,SAASa,gBAAT,GAA4B;AAClC,SAAOlB,UAAU,CAACE,UAAD,CAAjB;AACA","sourcesContent":["import React, { useState, useContext } from 'react';\nimport sublinks from './data';\n\nconst AppContext = React.createContext();\n\nexport function AppProvider({ children }) {\n\tconst [isSidebarOpen, setIsSidebarOpen] = useState(false);\n\tconst [isSubmenuOpen, setIsSubmenuOpen] = useState(false);\n\tconst [location, setLocation] = useState({});\n\n\tfunction openSidebar() {\n\t\tsetIsSidebarOpen(true);\n\t}\n\tfunction closeSidebar() {\n\t\tsetIsSidebarOpen(false);\n\t}\n\tfunction openSubmenu(text, coordinates) {\n\t\tsetLocation(coordinates);\n\n\t\tsetIsSubmenuOpen(true);\n\t}\n\tfunction closeSubmenu() {\n\t\tsetIsSubmenuOpen(false);\n\t}\n\n\treturn (\n\t\t<AppContext.Provider\n\t\t\tvalue={{\n\t\t\t\tisSubmenuOpen,\n\t\t\t\tisSidebarOpen,\n\t\t\t\topenSubmenu,\n\t\t\t\topenSidebar,\n\t\t\t\tcloseSubmenu,\n\t\t\t\tcloseSidebar,\n\t\t\t\tlocation,\n\t\t\t}}\n\t\t>\n\t\t\t{children}\n\t\t</AppContext.Provider>\n\t);\n}\n\nexport function useGlobalContext() {\n\treturn useContext(AppContext);\n}\n"]},"metadata":{},"sourceType":"module"}